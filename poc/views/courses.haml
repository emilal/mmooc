%h2 Session
%pre
  = h (JSON.pretty_generate @session.to_h)
%p
  The access token stored in the session can be used in curl commands to experiment with the API.
%pre
  curl -H "Authorization: Bearer ACCESS-TOKEN" URL

%h2 All courses
%p For a given acccount (department)
%ul
  %li
    %a(href="https://canvas.instructure.com/doc/api/accounts.html#method.accounts.courses_api")
      Documentation
  %li
    = @courses_url
%h4 Response
%ul
  - @courses.each do |c|
    %li
      = c["name"]
.alert.alert-info
  Note: There doesn't seem to be any way to get the course descriptions
  from this API call. Need to do new API calls for each course. See below.
%pre
  = h (JSON.pretty_generate @courses)


%h2 A course
%p Run this API call to get the course description.
%ul
  %li
    %a(href="https://canvas.instructure.com/doc/api/courses.html#method.courses.show")
      Documentation
  %li
    = @course_1_url
%h4 Response
%ul
  %li
    = @course_1["name"]
  %li
    = @course_1["syllabus_body"]
%pre
  = h (JSON.pretty_generate @course_1)


%h2 My Courses
%p List all courses you are enrolled in.
%ul
  %li
    %a(href="https://canvas.instructure.com/doc/api/courses.html#method.courses.index")
      Documentation
  %li
    = @my_courses_url
%h4 Response
%ul
  - @my_courses.each do |c|
    - percent = 100*c["course_progress"]["requirement_completed_count"] / c["course_progress"]["requirement_count"]
    %li
      %p
        = c["name"]
      %ul
        %li
          = c["syllabus_body"]
        %li
          Requirements: #{c["course_progress"]["requirement_count"]}
        %li
          Completed: #{c["course_progress"]["requirement_completed_count"]}
        %li
          Next: #{c["course_progress"]["next_requirement_url"]}
        %li
          Percent: #{percent}
        %li
          .progress
            .progress-bar(role="progressbar" aria-valuenow="#{percent}" Aria-valuemin="0" aria-valuemax="100" style="width: #{percent}%;")
              #{percent}%
%pre
  = h (JSON.pretty_generate @my_courses)

%h2 Modules for a given course
%ul
  %li
    %a(href="https://canvas.instructure.com/doc/api/modules.html#method.context_modules_api.index")
      Documentation
  %li
    = @modules_url
%h4 Response
%ol
  - @modules.each do |m|
    - percent = m['items'].length == 0 ? 100 : (100 * m['items'].reduce(0) {|a, i| i["completion_requirement"]['completed'] ? a + 1 : a}) / m['items'].length
    %li
      %p
        = m['name']
        %span(class="#{m['state'] == 'locked' ? 'glyphicon glyphicon-lock' : ''}")
      %ul
        %li
          .progress
            .progress-bar(role="progressbar" aria-valuenow="#{percent}" Aria-valuemin="0" aria-valuemax="100" style="width: #{percent}%;")
              #{percent}%
        - m['items'].each do |i|
          %li
            = i['title']
            %span(class="#{i['completion_requirement']['completed'] ? 'glyphicon glyphicon-ok' : ''}")
.alert.alert-info
  Note: From API documentation: Callers must be prepared to use the List Module
  Items API if items are not returned.
.alert.alert-info
  Note: Should probably manually filter modules and items on `published = true`.
  Doesn't seem to be way to filter on this in the API.
%pre
  = h (JSON.pretty_generate @modules)

%h2 Course front page
%ul
  %li
    %a(href="https://canvas.instructure.com/doc/api/pages.html#method.wiki_pages_api.show_front_page")
      Documentation
  %li
    = @front_page_url
%h4 Response
%div
  = @front_page['body']
%pre
  = h (JSON.pretty_generate @front_page)
